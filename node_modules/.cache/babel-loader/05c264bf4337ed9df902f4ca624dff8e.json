{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _message from \"antd/lib/message\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { host } from \"../../helpers/axiosCalls\";\nexport var call =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context, auth, course, status) {\n    var headers, body;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            headers = {\n              'Content-Type': 'application/json',\n              'Authorization': \" Bearer \".concat(auth.token)\n            };\n            body = {\n              courseId: course._id,\n              status: status,\n              course: course\n            };\n            _context.next = 5;\n            return axios.post(\"\".concat(host, \"/api-routes/change-course-status\"), _JSON$stringify(body), {\n              headers: headers\n            });\n\n          case 5:\n            _message.success('Successfully set course status to ' + status);\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n            _message.error('There was an issue approving this course');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function call(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\Users\\Jalen & Tammy\\Desktop\\Courses-In-Review\\coursesInReview\\containerMethods\\setCourseStatus.js"],"names":["axios","host","call","context","auth","course","status","headers","token","body","courseId","_id","post","success","error"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,0BAArB;AAEA,OAAO,IAAMC,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,OAAP,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEZC,YAAAA,OAFY,GAEF;AACZ,8BAAgB,kBADJ;AAEZ,iDAA6BH,IAAI,CAACI,KAAlC;AAFY,aAFE;AAOZC,YAAAA,IAPY,GAOL;AACTC,cAAAA,QAAQ,EAAEL,MAAM,CAACM,GADR;AAETL,cAAAA,MAAM,EAANA,MAFS;AAGTD,cAAAA,MAAM,EAAEA;AAHC,aAPK;AAAA;AAAA,mBAaVL,KAAK,CAACY,IAAN,WAAeX,IAAf,uCACJ,gBAAeQ,IAAf,CADI,EAEJ;AAAEF,cAAAA,OAAO,EAAPA;AAAF,aAFI,CAbU;;AAAA;AAgBhB,qBAAQM,OAAR,CAAgB,uCAAuCP,MAAvD;;AAhBgB;AAAA;;AAAA;AAAA;AAAA;;AAkBhB,qBAAQQ,KAAR,CAAc,0CAAd;;AAlBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJZ,IAAI;AAAA;AAAA;AAAA,GAAV","sourcesContent":["import axios from 'axios';\r\nimport { message } from 'antd';\r\nimport { host } from \"../../helpers/axiosCalls\";\r\n\r\nexport const call = async (context, auth, course, status) => {\r\n  try {\r\n    let headers = {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': ` Bearer ${ auth.token }`\r\n    };\r\n    \r\n    let body = {\r\n      courseId: course._id,\r\n      status,\r\n      course: course\r\n    };\r\n    \r\n    await axios.post(`${ host }/api-routes/change-course-status`,\r\n      JSON.stringify(body),\r\n      { headers });\r\n    message.success('Successfully set course status to ' + status)\r\n  } catch (e) {\r\n    message.error('There was an issue approving this course');\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}